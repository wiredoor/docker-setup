services:
  wiredoor:
    image: ghcr.io/wiredoor/wiredoor:latest
    container_name: wiredoor
    cap_add:
      - NET_ADMIN
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - wiredoor-data:/data
      - wiredoor-certbot:/etc/letsencrypt
      - wiredoor-logs:/var/log/nginx           # <--- Optional: Mount for collecting NGINX logs
    ports:
      - 80:80/tcp
      - 443:443/tcp
      - 51820:51820/udp                        # Must match with VPN_PORT in .env
      - 32760-32767:32760-32767                # Must match with TCP_SERVICES_PORT_RANGE in .env
    dns:
      - 1.1.1.1                                # Preferred DNS for domain resolution
    sysctls:
      - net.ipv4.ip_forward=1
    networks:
      - wiredoor

  crowdsec:
    image: crowdsecurity/crowdsec:latest
    container_name: crowdsec
    restart: unless-stopped
    volumes:
      - crowdsec-data:/var/lib/crowdsec/data/
      - wiredoor-logs:/var/log/nginx:ro
      - ./extras/crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
    environment:
      COLLECTIONS: "crowdsecurity/nginx"
      TZ: "America/New_York"
      GID: "${GID-1000}"
    ports:
      - "127.0.0.1:8080:8080"
    healthcheck:
      test: ["CMD", "cscli", "lapi", "status"]
      interval: 15s
      timeout: 10s
      retries: 4
      start_period: 30s
    networks:
      - wiredoor

  grafana:
    image: grafana/grafana:11.6.1
    container_name: grafana
    restart: unless-stopped
    # port:
    #   - 127.0.0.1:3000:3000
    environment:
      # GF_SERVER_ROOT_URL: https://grafana.domain.com
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER?}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD?}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./extras/grafana/provisioning:/etc/grafana/provisioning/
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3000/api/health"]
      interval: 30s
      start_period: 30s
      timeout: 5s
      retries: 3
    networks:
      - wiredoor

  prometheus:
    image: quay.io/prometheus/prometheus:v3.3.1
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    # ports:
    #   - 127.0.0.1:9090:9090
    volumes:
      - ./extras/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:9090/-/ready"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - wiredoor

volumes:
  wiredoor-data:
  wiredoor-certbot:
  wiredoor-logs:
  crowdsec-data:
  grafana-data:
  prometheus-data:

networks:
  wiredoor:
